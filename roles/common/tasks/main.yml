---
- name: Get the kernel version
  command: "uname -r"
  register: uname

- name: full system upgrade
  pacman:
    update_cache: yes
    upgrade: yes

- name: install git and base devel group
  pacman:
    name: ['base-devel', 'git']

- name: make AUR build dir
  file:
    path: /home/build
    state: directory
    group: nobody
    mode: "g+ws"

- name: get ready to build from AUR
  shell: |
    setfacl -m u::rwx,g::rwx /home/build
    setfacl -d --set u::rwx,g::rwx,o::- /home/build
    
    exit 0
    
- name: clone ansible-aur-git repo from the AUR
  git:
    repo: 'https://aur.archlinux.org/ansible-aur-git.git'
    dest: /home/build/ansible-aur-git
    force: yes

- name: delete previous packages
  file:
    path: /var/tmp/ans_makepkg
    state: absent

- name: build ansible AUR module
  command: "makepkg"
  environment:
    PKGEXT: .pkg.tar
    PKGDEST: /var/tmp/ans_makepkg
  args:
    chdir: /home/build/ansible-aur-git
  become: yes
  become_user: nobody

- name: install previously built AUR packages
  shell: "pacman -U *.pkg.tar --noconfirm"
  args:
    chdir: /var/tmp/ans_makepkg

- name: cleanup previous packages
  file:
    path: /var/tmp/ans_makepkg
    state: absent

- name: make aur_builder user
  user:
    name: aur_builder

- name: give aur_builder sudo for pacman
  lineinfile:
   path: /etc/sudoers.d/aur_builder-allow-to-sudo-pacman
   state: present
   line: "aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman"
   validate: /usr/sbin/visudo -cf %s
   create: yes

- name: install go for yay
  pacman:
    name: go

